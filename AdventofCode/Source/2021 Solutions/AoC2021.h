void AoC2021_01A(std::istream& input);
void AoC2021_01B(std::istream& input);
void AoC2021_02A(std::istream& input);
void AoC2021_02B(std::istream& input);
void AoC2021_03A(std::istream& input);
void AoC2021_03B(std::istream& input);
void AoC2021_04A(std::istream& input);
void AoC2021_04B(std::istream& input);
void AoC2021_05A(std::istream& input);
void AoC2021_05B(std::istream& input);
void AoC2021_06A(std::istream& input);
void AoC2021_06B(std::istream& input);
void AoC2021_07A(std::istream& input);
void AoC2021_07B(std::istream& input);
void AoC2021_08A(std::istream& input);
void AoC2021_08B(std::istream& input);
void AoC2021_09A(std::istream& input);
void AoC2021_09B(std::istream& input);
void AoC2021_10A(std::istream& input);
void AoC2021_10B(std::istream& input);
void AoC2021_11A(std::istream& input);
void AoC2021_11B(std::istream& input);
void AoC2021_12A(std::istream& input);
void AoC2021_12B(std::istream& input);
void AoC2021_13A(std::istream& input);
void AoC2021_13B(std::istream& input);
void AoC2021_14A(std::istream& input);
void AoC2021_14B(std::istream& input);
void AoC2021_15A(std::istream& input);
void AoC2021_15B(std::istream& input);
void AoC2021_16A(std::istream& input);
void AoC2021_16B(std::istream& input);
void AoC2021_17A(std::istream& input);
void AoC2021_17B(std::istream& input);
void AoC2021_18A(std::istream& input);
void AoC2021_18B(std::istream& input);
void AoC2021_19A(std::istream& input);
void AoC2021_19B(std::istream& input);
void AoC2021_20A(std::istream& input);
void AoC2021_20B(std::istream& input);
void AoC2021_21A(std::istream& input);
void AoC2021_21B(std::istream& input);
void AoC2021_22A(std::istream& input);
void AoC2021_22B(std::istream& input);
void AoC2021_23A(std::istream& input);
void AoC2021_23B(std::istream& input);
void AoC2021_24A(std::istream& input);
void AoC2021_24B(std::istream& input);
void AoC2021_25A(std::istream& input);
void AoC2021_25B(std::istream& input);

//void run_2021(int puzzle, int part, std::istream& input)
//{
//  switch (puzzle)
//  {
//    case  1: part == 1 ? AoC2021_01A(input) : AoC2021_01B(input); break;
//    case  2: part == 1 ? AoC2021_02A(input) : AoC2021_02B(input); break;
//    case  3: part == 1 ? AoC2021_03A(input) : AoC2021_03B(input); break;
//    case  4: part == 1 ? AoC2021_04A(input) : AoC2021_04B(input); break;
//    case  5: part == 1 ? AoC2021_05A(input) : AoC2021_05B(input); break;
//    case  6: part == 1 ? AoC2021_06A(input) : AoC2021_06B(input); break;
//    case  7: part == 1 ? AoC2021_07A(input) : AoC2021_07B(input); break;
//    case  8: part == 1 ? AoC2021_08A(input) : AoC2021_08B(input); break;
//    case  9: part == 1 ? AoC2021_09A(input) : AoC2021_09B(input); break;
//    case 10: part == 1 ? AoC2021_10A(input) : AoC2021_10B(input); break;
//    case 11: part == 1 ? AoC2021_11A(input) : AoC2021_11B(input); break;
//    case 12: part == 1 ? AoC2021_12A(input) : AoC2021_12B(input); break;
//    case 13: part == 1 ? AoC2021_13A(input) : AoC2021_13B(input); break;
//    case 14: part == 1 ? AoC2021_14A(input) : AoC2021_14B(input); break;
//    case 15: part == 1 ? AoC2021_15A(input) : AoC2021_15B(input); break;
//  //case 16: part == 1 ? AoC2021_16A(input) : AoC2021_16B(input); break;
//  //case 17: part == 1 ? AoC2021_17A(input) : AoC2021_17B(input); break;
//  //case 18: part == 1 ? AoC2021_18A(input) : AoC2021_18B(input); break;
//  //case 19: part == 1 ? AoC2021_19A(input) : AoC2021_19B(input); break;
//  //case 20: part == 1 ? AoC2021_20A(input) : AoC2021_20B(input); break;
//  //case 21: part == 1 ? AoC2021_21A(input) : AoC2021_21B(input); break;
//  //case 22: part == 1 ? AoC2021_22A(input) : AoC2021_22B(input); break;
//  //case 23: part == 1 ? AoC2021_23A(input) : AoC2021_23B(input); break;
//  //case 24: part == 1 ? AoC2021_24A(input) : AoC2021_24B(input); break;
//  //case 25: part == 1 ? AoC2021_25A(input) : AoC2021_25B(input); break;
//    default: assert(false);                                   break;
//  }
//}
